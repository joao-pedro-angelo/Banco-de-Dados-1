-- Etapa 1 e 2: Criação das Tabelas

CREATE TABLE automovel(
	placa VARCHAR(11),
	modelo VARCHAR(50),
	ano INT,
	cor VARCHAR(20)
);

CREATE TABLE segurado(
	nome VARCHAR(100),
	cpf CHAR(11),
	endereco VARCHAR(200),
	telefone VARCHAR(15)
);

CREATE TABLE perito(
	nome VARCHAR(100),
	registro_profissional VARCHAR(20),
	telefone VARCHAR(15),
	email VARCHAR(100),
	cpf CHAR(11)
);

CREATE TABLE oficina(
	nome VARCHAR(100),
	endereco VARCHAR(200),
	telefone VARCHAR(15),
	cnpj CHAR(14)
);

CREATE TABLE seguro(
	id INT GENERATED BY DEFAULT AS IDENTITY,
	numero_apolice VARCHAR(20),
	tipo VARCHAR(50),
	data_inicio DATE,
	data_fim DATE
);

CREATE TABLE sinistro(
	descricao TEXT,
	data DATE,
	id SERIAL
);

CREATE TABLE pericia(
	id INT GENERATED BY DEFAULT AS IDENTITY,
	data DATE,
	resultado VARCHAR(500)
);

CREATE TABLE reparo(
	id INT GENERATED BY DEFAULT AS IDENTITY,
	descricao VARCHAR(500),
	prazo_estimado INT --em dias
);

-- ----------------------------------------------------------------------------------
-- Etapa 3: Chaves primárias

ALTER TABLE automovel
ADD PRIMARY KEY (placa);

ALTER TABLE seguro
ADD PRIMARY KEY(id);

ALTER TABLE segurado
ADD PRIMARY KEY (cpf);

ALTER TABLE perito
ADD PRIMARY KEY (registro_profissional);

ALTER TABLE oficina
ADD PRIMARY KEY (cnpj);

ALTER TABLE sinistro
ADD PRIMARY KEY (id);

ALTER TABLE pericia
ADD PRIMARY KEY (id);

ALTER TABLE reparo
ADD PRIMARY KEY (id);


-- ------------------------------------------------------------------------------------
-- Etapa 4: Chaves estrangeiras

ALTER TABLE seguro
ADD COLUMN cpf_segurado CHAR(11); --Adiciono a coluna "cpf_segurado" na tabela "seguro"
ALTER TABLE seguro
ADD CONSTRAINT fk_seguro_segurado
FOREIGN KEY (cpf_segurado) REFERENCES segurado (cpf); --vinculo a coluna "cpf_segurado"
                                                      --da tabela "seguro" com a coluna
                                                      --"cpf" da tabela "segurado"
                                                      


ALTER TABLE sinistro
ADD COLUMN id_seguro INT GENERATED BY DEFAULT AS IDENTITY;
-- -- Sinistro pode estar associado a um Seguro
ALTER TABLE sinistro
ADD CONSTRAINT fk_sinistro_seguro
FOREIGN KEY (id_seguro) REFERENCES seguro (id);

ALTER TABLE pericia
ADD COLUMN registro_profissional_do_perito VARCHAR(20);
-- Pericia está associada a um perito
ALTER TABLE pericia
ADD CONSTRAINT fk_pericia_perito
FOREIGN KEY (registro_profissional_do_perito) REFERENCES perito(registro_profissional);

ALTER TABLE reparo
ADD COLUMN cnpj_da_oficina CHAR(14);
-- reparo está associado a uma oficina
ALTER TABLE reparo
ADD CONSTRAINT fk_reparo_oficina
FOREIGN KEY (cnpj_da_oficina) REFERENCES oficina(cnpj);

ALTER TABLE reparo
ADD COLUMN placa_do_automovel VARCHAR(11);
-- reparo está associado a um automóvel
ALTER TABLE reparo
ADD CONSTRAINT fk_reparo_automovel
FOREIGN KEY (placa_do_automovel) REFERENCES automovel(placa);


-- ------------------------------------------------------------------------------------
-- Etapa 5: atributos NOT NULL

ALTER TABLE automovel
ALTER COLUMN placa SET NOT NULL,
ALTER COLUMN modelo SET NOT NULL;

ALTER TABLE segurado
ALTER COLUMN nome SET NOT NULL,
ALTER COLUMN cpf SET NOT null;

ALTER TABLE perito
ALTER COLUMN nome SET NOT NULL,
ALTER COLUMN registro_profissional SET NOT NULL;

ALTER TABLE oficina
ALTER COLUMN nome SET NOT NULL,
ALTER COLUMN cnpj SET NOT NULL;

ALTER TABLE seguro
ALTER COLUMN numero_apolice SET NOT NULL;

ALTER TABLE sinistro
ALTER COLUMN data SET NOT NULL;

ALTER TABLE pericia
ALTER COLUMN data SET NOT NULL;

ALTER TABLE reparo
ALTER COLUMN descricao SET NOT NULL;


-- ----------------------------------------------------------------------------------------
-- Etapa 6: Remover todas as tabelas, observando que não dá para remover em qualquer ordem
-- as foreign keys impedem a remoção de algumas tabelas
-- DROP TABLE IF EXISTS automovel; 
-- Result: ERROR:  cannot drop table automovel because other objects depend on it
-- DETAIL:  constraint fk_reparo_automovel on table reparo depends on table automovel

DROP TABLE IF EXISTS reparo;
DROP TABLE IF EXISTS sinistro;
DROP TABLE IF EXISTS seguro;
DROP TABLE IF EXISTS segurado;
DROP TABLE IF EXISTS pericia;
DROP TABLE IF EXISTS perito;
DROP TABLE IF EXISTS oficina;
DROP TABLE IF EXISTS automovel;


-- -------------------------------------------------------------------------------------
-- Etapa 7: Reescrever todos os comandos CREATE TABLE incorporando os outros comandos

-- Criação da tabela automovel com chaves primárias e atributos NOT NULL
CREATE TABLE automovel(
	placa VARCHAR(11) PRIMARY KEY,
	modelo VARCHAR(50) NOT NULL,
	ano INT,
	cor VARCHAR(20)
);

-- Criação da tabela segurado com chaves primárias e atributos NOT NULL
CREATE TABLE segurado(
	nome VARCHAR(100) NOT NULL,
	cpf CHAR(11) PRIMARY KEY,
	endereco VARCHAR(200),
	telefone VARCHAR(15)
);

-- Criação da tabela perito com chaves primárias e atributos NOT NULL
CREATE TABLE perito(
	nome VARCHAR(100) NOT NULL,
	registro_profissional VARCHAR(20) PRIMARY KEY,
	telefone VARCHAR(15),
	email VARCHAR(100),
	cpf CHAR(11)
);

-- Criação da tabela oficina com chaves primárias e atributos NOT NULL
CREATE TABLE oficina(
	nome VARCHAR(100) NOT NULL,
	endereco VARCHAR(200),
	telefone VARCHAR(15),
	cnpj CHAR(14) PRIMARY KEY
);

-- Criação da tabela seguro com chaves primárias e atributos NOT NULL
CREATE TABLE seguro(
	id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	numero_apolice VARCHAR(20) NOT NULL,
	tipo VARCHAR(50),
	data_inicio DATE,
	data_fim DATE,
	cpf_segurado CHAR(11),
	CONSTRAINT fk_seguro_segurado FOREIGN KEY (cpf_segurado) REFERENCES segurado (cpf)
);

-- Criação da tabela sinistro com chaves primárias e atributos NOT NULL
CREATE TABLE sinistro(
	id SERIAL PRIMARY KEY,
	descricao TEXT,
	data DATE NOT NULL
);

-- Criação da tabela pericia com chaves primárias e atributos NOT NULL
CREATE TABLE pericia(
	id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	data DATE NOT NULL,
	resultado VARCHAR(500)
);

-- Criação da tabela reparo com chaves primárias, atributos NOT NULL e chaves estrangeiras
CREATE TABLE reparo(
	id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	descricao VARCHAR(500) NOT NULL,
	prazo_estimado INT, -- em dias
	cnpj_da_oficina CHAR(14),
	placa_do_automovel VARCHAR(11),
	CONSTRAINT fk_reparo_oficina FOREIGN KEY (cnpj_da_oficina) REFERENCES oficina(cnpj),
	CONSTRAINT fk_reparo_automovel FOREIGN KEY (placa_do_automovel) REFERENCES automovel(placa)
);

